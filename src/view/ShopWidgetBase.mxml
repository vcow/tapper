<?xml version="1.0"?>
<f:LayoutGroup xmlns:f="library://ns.feathersui.com/mxml" xmlns:fx="http://ns.adobe.com/mxml/2009">

    <fx:Metadata>
        [Event(name="goToShop", type="starling.events.Event")]
        [Event(name="dataChanged", type="starling.events.Event")]
    </fx:Metadata>

    <fx:Script><![CDATA[
        import app.AppFacade;

        import feathers.binding.utils.BindingUtils;

        import feathers.binding.utils.ChangeWatcher;

        import feathers.utils.touch.TapToTrigger;

        import mediators.ShopWidgetMediator;

        import org.puremvc.as3.multicore.patterns.facade.Facade;

        import vo.UnitInfo;

        import starling.display.DisplayObject;

        import starling.events.Event;

        protected var _isActive:Boolean;
        protected var _trigger:TapToTrigger;

        private var _dataChangeWatcher:ChangeWatcher;

        public static const MEDIATOR_NAME:String = "shopWidgetMediator";

        [Bindable]
        protected var _mediator:ShopWidgetMediator;

        protected function get slider():starling.display.DisplayObject
        {
            throw Error("Abstract");
        }

        override protected function initialize():void
        {
            super.initialize();

            var facade:AppFacade = Facade.getInstance(AppFacade.NAME) as AppFacade;
            if (facade.hasMediator(MEDIATOR_NAME))
            {
                _mediator = facade.retrieveMediator(MEDIATOR_NAME) as ShopWidgetMediator;
                facade.removeMediator(MEDIATOR_NAME);
                _mediator.setViewComponent(this);
                facade.registerMediator(_mediator);
            }
            else
            {
                var mediator:ShopWidgetMediator = new ShopWidgetMediator(MEDIATOR_NAME, this);
                facade.registerMediator(mediator);
                _mediator = mediator;
            }

            _dataChangeWatcher = BindingUtils.bindSetter(onDataChanged, _mediator, "data");

            _trigger = new TapToTrigger(slider);
            slider.addEventListener(starling.events.Event.TRIGGERED, onSliderTriggered);
        }

        override public function dispose():void
        {
            slider.removeEventListener(starling.events.Event.TRIGGERED, onSliderTriggered);

            if (_mediator)
            {
                _dataChangeWatcher.unwatch();

                var facade:AppFacade = Facade.getInstance(AppFacade.NAME) as AppFacade;
                facade.removeMediator(_mediator.getMediatorName());
                _mediator = null;
            }

            super.dispose();
        }

        protected function onDataChanged(data:UnitInfo):void
        {
            if (data) dispatchEventWith("dataChanged");
        }

        private function onSliderTriggered(event:starling.events.Event):void
        {
            if (_isActive) dispatchEventWith("goToShop");
        }
        ]]></fx:Script>
</f:LayoutGroup>